if os != 'windows'
    depends('g++')
    depends('rm')
    depends('mkdir')
    depends('strip')
else
    depends('cl.exe')
    depends('./bin')
endif

# DEPS
depends('./deps/string/string.cc')
depends('./deps/string/string.hh')
depends('./deps/vector/vector.hh')
depends('./deps/sptr/sptr.hh')

# SRC
depends('./src/colorize/colorize.cc')
depends('./src/colorize/colorize.h')

depends('./src/defines/defines.h')
depends('./src/defines/keywords_primary_data_types.cc')
depends('./src/defines/keywords_primary_data_types.h')

depends('./src/entry/horizon.cc')

depends('./src/errors/errors.cc')
depends('./src/errors/errors.hh')

depends('./src/lexer/lexer.cc')
depends('./src/lexer/lexer.hh')

depends('./src/misc/file/file.hh')
depends('./src/misc/exit_heap_fail.hh')
depends('./src/misc/load_file.hh')
depends('./src/misc/misc.cc')

depends('./src/parser/ast/ast.hh')
depends('./src/parser/grammar.gr')
depends('./src/parser/parser.cc')
depends('./src/parser/parser.hh')

depends('./src/token/token.hh')
depends('./src/token_type/token_type.hh')

# Targets

[compiler]:
    if os == 'windows'
        compiler = 'cl.exe'
    else
        compiler = 'g++'
    endif

[arguments]:
    if os == 'windows'
        release_args = ['/std:c++latest', '/O2', '/DNDEBUG', '/EHsc']
    else
        release_args = ['-std=c++23', '-O3', '-DNDEBUG', '-march=native', '-mtune=native', '-masm=intel']
        debug_args = ['-std=c++23', '-g', '-pg', '-ggdb3', '-Wall', '-Wextra', '-Wuninitialized', '-Wstrict-aliasing', '-Wshadow', '-pedantic', '-Wmissing-declarations', '-Wmissing-include-dirs', '-Wnoexcept', '-Wunused']
    endif

[sources]:
    1 = './deps/string/string.cc'
    2 = './src/misc/misc.cc'
    3 = './src/errors/errors.cc'
    4 = './src/lexer/lexer.cc'
    5 = './src/colorize/colorize.cc'
    6 = './src/parser/parser.cc'
    7 = './src/entry/horizon.cc'
    8 = './src/defines/keywords_primary_data_types.cc'

[output]:
    if os == 'windows'
        release = ['/Fo./bin/', '/Fe./bin/horizon']
    else
        release = ['-o', './bin/horizon']
        debug = ['-o', './bin/horizon_debug']
    endif

[clean]:
    cmd = ['rm', './bin/horizon', './bin/horizon_debug']

if os != 'windows'
    [strip]:
        cmd = ['strip', './bin/horizon']
endif

[release]:
    compiler()
    arguments()[0]
    sources()
    output()[0]

if os != 'windows'
    [debug]:
        compiler()
        arguments()[1]
        sources()
        output()[1]
endif

[run]:
    if os == 'windows'
        cmd = ['./bin/horizon', './sample/expr.hr']
    else
        cmd = ['./bin/horizon_debug', './sample/expr.hr']
    endif

[all]:
    if os != 'windows'
        make_dir = ['mkdir', '-p', './bin']
    endif
    release()
    if os != 'windows'
        debug()
        strip()
    endif